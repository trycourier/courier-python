# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations

import typing

import pydantic
from ...core.pydantic_utilities import IS_PYDANTIC_V2, update_forward_refs
from .base_filter_config import BaseFilterConfig


class NestedFilterConfig(BaseFilterConfig):
    """
    The operator to use for filtering
    """

    rules: typing.List["FilterConfig"]

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow


from .filter_config import FilterConfig  # noqa: E402, F401, I001

update_forward_refs(NestedFilterConfig)
