# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ...core.pydantic_utilities import IS_PYDANTIC_V2
from .base_filter_config import BaseFilterConfig


class SingleFilterConfig(BaseFilterConfig):
    """
    A single filter to use for filtering
    """

    value: str = pydantic.Field()
    """
    The value to use for filtering
    """

    path: str = pydantic.Field()
    """
    The attribe name from profile whose value will be operated against the filter value
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
