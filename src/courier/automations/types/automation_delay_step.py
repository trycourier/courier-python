# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ...core.pydantic_utilities import IS_PYDANTIC_V2
from .automation_step import AutomationStep


class AutomationDelayStep(AutomationStep):
    action: typing.Literal["delay"] = "delay"
    duration: typing.Optional[str] = pydantic.Field(default=None)
    """
    The [ISO 8601 duration](https://en.wikipedia.org/wiki/ISO_8601#Durations) string for how long to delay for
    """

    until: typing.Optional[str] = pydantic.Field(default=None)
    """
    The ISO 8601 timestamp for when the delay should end
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
