# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ...core.pydantic_utilities import IS_PYDANTIC_V2
from .automation_fetch_data_webhook import AutomationFetchDataWebhook
from .automation_step import AutomationStep
from .merge_algorithm import MergeAlgorithm


class AutomationFetchDataStep(AutomationStep):
    """
    Examples
    --------
    from courier.automations import (
        AutomationFetchDataStep,
        AutomationFetchDataWebhook,
    )

    AutomationFetchDataStep(
        merge_strategy="none",
        webhook=AutomationFetchDataWebhook(
            body={"foo": "bar"},
            params={"hello": "world"},
            headers={"content-type": "application/json"},
            method="POST",
            url="https://bryan-at-courier.free.beeceptor.com",
        ),
    )
    """

    action: typing.Literal["fetch-data"] = "fetch-data"
    webhook: AutomationFetchDataWebhook
    merge_strategy: MergeAlgorithm
    idempotency_expiry: typing.Optional[str] = None
    idempotency_key: typing.Optional[str] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
