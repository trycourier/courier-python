# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ...core.pydantic_utilities import IS_PYDANTIC_V2
from .automation_step import AutomationStep


class AutomationSendStep(AutomationStep):
    action: typing.Literal["send"] = "send"
    brand: typing.Optional[str] = None
    data: typing.Optional[typing.Dict[str, typing.Optional[typing.Any]]] = None
    override: typing.Optional[typing.Dict[str, typing.Optional[typing.Any]]] = None
    profile: typing.Optional[typing.Optional[typing.Any]] = None
    recipient: typing.Optional[str] = None
    template: typing.Optional[str] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
