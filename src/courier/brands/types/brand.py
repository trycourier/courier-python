# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ...core.pydantic_utilities import IS_PYDANTIC_V2
from ...core.unchecked_base_model import UncheckedBaseModel
from .brand_settings import BrandSettings
from .brand_snippets import BrandSnippets


class Brand(UncheckedBaseModel):
    created: int = pydantic.Field()
    """
    The date/time of when the brand was created. Represented in milliseconds since Unix epoch.
    """

    id: typing.Optional[str] = pydantic.Field(default=None)
    """
    Brand Identifier
    """

    name: str = pydantic.Field()
    """
    Brand name
    """

    published: int = pydantic.Field()
    """
    The date/time of when the brand was published. Represented in milliseconds since Unix epoch.
    """

    settings: BrandSettings
    updated: int = pydantic.Field()
    """
    The date/time of when the brand was updated. Represented in milliseconds since Unix epoch.
    """

    snippets: typing.Optional[BrandSnippets] = None
    version: str = pydantic.Field()
    """
    The version identifier for the brand
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
