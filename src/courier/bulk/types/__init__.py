# This file was auto-generated by Fern from our API Definition.

# isort: skip_file

import typing
from importlib import import_module

if typing.TYPE_CHECKING:
    from .bulk_create_job_response import BulkCreateJobResponse
    from .bulk_get_job_params import BulkGetJobParams
    from .bulk_get_job_response import BulkGetJobResponse
    from .bulk_get_job_users_params import BulkGetJobUsersParams
    from .bulk_get_job_users_response import BulkGetJobUsersResponse
    from .bulk_ingest_error import BulkIngestError
    from .bulk_ingest_users_params import BulkIngestUsersParams
    from .bulk_ingest_users_response import BulkIngestUsersResponse
    from .bulk_job_status import BulkJobStatus
    from .bulk_job_user_status import BulkJobUserStatus
    from .bulk_message_user_response import BulkMessageUserResponse
    from .inbound_bulk_content_message import InboundBulkContentMessage
    from .inbound_bulk_message import InboundBulkMessage
    from .inbound_bulk_message_user import InboundBulkMessageUser
    from .inbound_bulk_message_v_1 import InboundBulkMessageV1
    from .inbound_bulk_message_v_2 import InboundBulkMessageV2
    from .inbound_bulk_template_message import InboundBulkTemplateMessage
    from .job_details import JobDetails
_dynamic_imports: typing.Dict[str, str] = {
    "BulkCreateJobResponse": ".bulk_create_job_response",
    "BulkGetJobParams": ".bulk_get_job_params",
    "BulkGetJobResponse": ".bulk_get_job_response",
    "BulkGetJobUsersParams": ".bulk_get_job_users_params",
    "BulkGetJobUsersResponse": ".bulk_get_job_users_response",
    "BulkIngestError": ".bulk_ingest_error",
    "BulkIngestUsersParams": ".bulk_ingest_users_params",
    "BulkIngestUsersResponse": ".bulk_ingest_users_response",
    "BulkJobStatus": ".bulk_job_status",
    "BulkJobUserStatus": ".bulk_job_user_status",
    "BulkMessageUserResponse": ".bulk_message_user_response",
    "InboundBulkContentMessage": ".inbound_bulk_content_message",
    "InboundBulkMessage": ".inbound_bulk_message",
    "InboundBulkMessageUser": ".inbound_bulk_message_user",
    "InboundBulkMessageV1": ".inbound_bulk_message_v_1",
    "InboundBulkMessageV2": ".inbound_bulk_message_v_2",
    "InboundBulkTemplateMessage": ".inbound_bulk_template_message",
    "JobDetails": ".job_details",
}


def __getattr__(attr_name: str) -> typing.Any:
    module_name = _dynamic_imports.get(attr_name)
    if module_name is None:
        raise AttributeError(f"No {attr_name} found in _dynamic_imports for module name -> {__name__}")
    try:
        module = import_module(module_name, __package__)
        if module_name == f".{attr_name}":
            return module
        else:
            return getattr(module, attr_name)
    except ImportError as e:
        raise ImportError(f"Failed to import {attr_name} from {module_name}: {e}") from e
    except AttributeError as e:
        raise AttributeError(f"Failed to get {attr_name} from {module_name}: {e}") from e


def __dir__():
    lazy_attrs = list(_dynamic_imports.keys())
    return sorted(lazy_attrs)


__all__ = [
    "BulkCreateJobResponse",
    "BulkGetJobParams",
    "BulkGetJobResponse",
    "BulkGetJobUsersParams",
    "BulkGetJobUsersResponse",
    "BulkIngestError",
    "BulkIngestUsersParams",
    "BulkIngestUsersResponse",
    "BulkJobStatus",
    "BulkJobUserStatus",
    "BulkMessageUserResponse",
    "InboundBulkContentMessage",
    "InboundBulkMessage",
    "InboundBulkMessageUser",
    "InboundBulkMessageV1",
    "InboundBulkMessageV2",
    "InboundBulkTemplateMessage",
    "JobDetails",
]
