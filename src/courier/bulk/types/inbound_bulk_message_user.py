# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ...commons.types.recipient_preferences import RecipientPreferences
from ...core.pydantic_utilities import IS_PYDANTIC_V2
from ...core.unchecked_base_model import UncheckedBaseModel
from ...send.types.user_recipient import UserRecipient


class InboundBulkMessageUser(UncheckedBaseModel):
    preferences: typing.Optional[RecipientPreferences] = None
    profile: typing.Optional[typing.Optional[typing.Any]] = None
    recipient: typing.Optional[str] = None
    data: typing.Optional[typing.Optional[typing.Any]] = None
    to: typing.Optional[UserRecipient] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
