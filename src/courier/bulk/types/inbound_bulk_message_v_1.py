# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ...core.pydantic_utilities import IS_PYDANTIC_V2
from ...core.unchecked_base_model import UncheckedBaseModel


class InboundBulkMessageV1(UncheckedBaseModel):
    brand: typing.Optional[str] = pydantic.Field(default=None)
    """
    A unique identifier that represents the brand that should be used 
    for rendering the notification.
    """

    data: typing.Optional[typing.Dict[str, typing.Optional[typing.Any]]] = pydantic.Field(default=None)
    """
    JSON that includes any data you want to pass to a message template. 
    The data will populate the corresponding template variables.
    """

    event: typing.Optional[str] = None
    locale: typing.Optional[typing.Dict[str, typing.Optional[typing.Any]]] = None
    override: typing.Optional[typing.Optional[typing.Any]] = pydantic.Field(default=None)
    """
    JSON that is merged into the request sent by Courier to the provider 
    to override properties or to gain access to features in the provider 
    API that are not natively supported by Courier.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
