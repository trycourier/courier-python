# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ...core.pydantic_utilities import IS_PYDANTIC_V2
from ...core.unchecked_base_model import UncheckedBaseModel


class UserTenantAssociation(UncheckedBaseModel):
    user_id: typing.Optional[str] = pydantic.Field(default=None)
    """
    User ID for the assocation between tenant and user
    """

    type: typing.Optional[typing.Literal["user"]] = None
    tenant_id: str = pydantic.Field()
    """
    Tenant ID for the assocation between tenant and user
    """

    profile: typing.Optional[typing.Dict[str, typing.Optional[typing.Any]]] = pydantic.Field(default=None)
    """
    Additional metadata to be applied to a user profile when used in a tenant context
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
