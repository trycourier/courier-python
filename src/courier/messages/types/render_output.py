# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ...core.pydantic_utilities import IS_PYDANTIC_V2
from ...core.unchecked_base_model import UncheckedBaseModel
from .rendered_message_content import RenderedMessageContent


class RenderOutput(UncheckedBaseModel):
    channel: str = pydantic.Field()
    """
    The channel used for rendering the message.
    """

    channel_id: str = pydantic.Field()
    """
    The ID of channel used for rendering the message.
    """

    content: RenderedMessageContent = pydantic.Field()
    """
    Content details of the rendered message.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
