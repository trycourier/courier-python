# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ...core.pydantic_utilities import IS_PYDANTIC_V2
from ...core.unchecked_base_model import UncheckedBaseModel
from .block_type import BlockType
from .notification_content import NotificationContent


class NotificationBlock(UncheckedBaseModel):
    alias: typing.Optional[str] = None
    context: typing.Optional[str] = None
    id: str
    type: BlockType
    content: typing.Optional[NotificationContent] = None
    locales: typing.Optional[typing.Dict[str, NotificationContent]] = None
    checksum: typing.Optional[str] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
