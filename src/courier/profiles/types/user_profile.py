# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ...core.datetime_utils import serialize_datetime
from ...core.pydantic_utilities import pydantic_v1
from .address import Address
from .airship_profile import AirshipProfile
from .discord import Discord
from .expo import Expo
from .intercom import Intercom
from .ms_teams import MsTeams
from .slack import Slack


class UserProfile(pydantic_v1.BaseModel):
    address: Address
    birthdate: str
    email: str
    email_verified: bool
    family_name: str
    gender: str
    given_name: str
    locale: str
    middle_name: str
    name: str
    nickname: str
    phone_number: str
    phone_number_verified: bool
    picture: str
    preferred_name: str
    profile: str
    sub: str
    updated_at: str
    website: str
    zoneinfo: str
    custom: typing.Any = pydantic_v1.Field()
    """
    A free form object. Due to a limitation of the API Explorer, you can only enter string key/values below, but this API accepts more complex object structures.
    """

    airship: AirshipProfile
    apn: str
    target_arn: str
    discord: Discord
    expo: Expo
    facebook_psid: str = pydantic_v1.Field(alias="facebookPSID")
    firebase_token: str = pydantic_v1.Field(alias="firebaseToken")
    intercom: Intercom
    slack: Slack
    ms_teams: MsTeams

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        allow_population_by_field_name = True
        populate_by_name = True
        extra = pydantic_v1.Extra.allow
        json_encoders = {dt.datetime: serialize_datetime}
