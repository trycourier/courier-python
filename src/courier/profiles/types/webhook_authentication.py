# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ...core.pydantic_utilities import IS_PYDANTIC_V2
from ...core.unchecked_base_model import UncheckedBaseModel
from .webhook_auth_mode import WebhookAuthMode


class WebhookAuthentication(UncheckedBaseModel):
    mode: WebhookAuthMode = pydantic.Field()
    """
    The authentication mode to use. Defaults to 'none' if not specified.
    """

    username: typing.Optional[str] = pydantic.Field(default=None)
    """
    Username for basic authentication.
    """

    password: typing.Optional[str] = pydantic.Field(default=None)
    """
    Password for basic authentication.
    """

    token: typing.Optional[str] = pydantic.Field(default=None)
    """
    Token for bearer authentication.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
