# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ...core.pydantic_utilities import IS_PYDANTIC_V2
from ...core.unchecked_base_model import UncheckedBaseModel
from .webhook_authentication import WebhookAuthentication
from .webhook_method import WebhookMethod
from .webhook_profile_type import WebhookProfileType


class WebhookProfile(UncheckedBaseModel):
    url: str = pydantic.Field()
    """
    The URL to send the webhook request to.
    """

    method: typing.Optional[WebhookMethod] = pydantic.Field(default=None)
    """
    The HTTP method to use for the webhook request. Defaults to POST if not specified.
    """

    headers: typing.Optional[typing.Dict[str, str]] = pydantic.Field(default=None)
    """
    Custom headers to include in the webhook request.
    """

    authentication: typing.Optional[WebhookAuthentication] = pydantic.Field(default=None)
    """
    Authentication configuration for the webhook request.
    """

    profile: typing.Optional[WebhookProfileType] = pydantic.Field(default=None)
    """
    Specifies what profile information is included in the request payload. Defaults to 'limited' if not specified.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
