# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ...core.datetime_utils import serialize_datetime
from ...core.pydantic_utilities import deep_union_pydantic_dicts, pydantic_v1
from ...core.unchecked_base_model import UncheckedBaseModel
from .webhook_authentication import WebhookAuthentication
from .webhook_method import WebhookMethod
from .webhook_profile_type import WebhookProfileType


class WebhookProfile(UncheckedBaseModel):
    url: str = pydantic_v1.Field()
    """
    The URL to send the webhook request to.
    """

    method: typing.Optional[WebhookMethod] = pydantic_v1.Field(default=None)
    """
    The HTTP method to use for the webhook request. Defaults to POST if not specified.
    """

    headers: typing.Optional[typing.Dict[str, str]] = pydantic_v1.Field(default=None)
    """
    Custom headers to include in the webhook request.
    """

    authentication: typing.Optional[WebhookAuthentication] = pydantic_v1.Field(default=None)
    """
    Authentication configuration for the webhook request.
    """

    profile: typing.Optional[WebhookProfileType] = pydantic_v1.Field(default=None)
    """
    Specifies what profile information is included in the request payload. Defaults to 'limited' if not specified.
    """

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults_exclude_unset: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        kwargs_with_defaults_exclude_none: typing.Any = {"by_alias": True, "exclude_none": True, **kwargs}

        return deep_union_pydantic_dicts(
            super().dict(**kwargs_with_defaults_exclude_unset), super().dict(**kwargs_with_defaults_exclude_none)
        )

    class Config:
        frozen = True
        smart_union = True
        extra = pydantic_v1.Extra.allow
        json_encoders = {dt.datetime: serialize_datetime}
