# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class BulkJobStatus(str, enum.Enum):
    CREATED = "CREATED"
    PROCESSING = "PROCESSING"
    COMPLETED = "COMPLETED"
    ERROR = "ERROR"

    def visit(
        self,
        created: typing.Callable[[], T_Result],
        processing: typing.Callable[[], T_Result],
        completed: typing.Callable[[], T_Result],
        error: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is BulkJobStatus.CREATED:
            return created()
        if self is BulkJobStatus.PROCESSING:
            return processing()
        if self is BulkJobStatus.COMPLETED:
            return completed()
        if self is BulkJobStatus.ERROR:
            return error()
