# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class Criteria(str, enum.Enum):
    NO_ESCALATION = "no-escalation"
    DELIVERED = "delivered"
    VIEWED = "viewed"
    ENGAGED = "engaged"

    def visit(
        self,
        no_escalation: typing.Callable[[], T_Result],
        delivered: typing.Callable[[], T_Result],
        viewed: typing.Callable[[], T_Result],
        engaged: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is Criteria.NO_ESCALATION:
            return no_escalation()
        if self is Criteria.DELIVERED:
            return delivered()
        if self is Criteria.VIEWED:
            return viewed()
        if self is Criteria.ENGAGED:
            return engaged()
