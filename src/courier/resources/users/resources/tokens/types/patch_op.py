# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class PatchOp(str, enum.Enum):
    REPLACE = "replace"
    ADD = "add"
    REMOVE = "remove"
    COPY = "copy"
    MOVE = "move"
    TEST = "test"

    def visit(
        self,
        replace: typing.Callable[[], T_Result],
        add: typing.Callable[[], T_Result],
        remove: typing.Callable[[], T_Result],
        copy: typing.Callable[[], T_Result],
        move: typing.Callable[[], T_Result],
        test: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is PatchOp.REPLACE:
            return replace()
        if self is PatchOp.ADD:
            return add()
        if self is PatchOp.REMOVE:
            return remove()
        if self is PatchOp.COPY:
            return copy()
        if self is PatchOp.MOVE:
            return move()
        if self is PatchOp.TEST:
            return test()
