# This file was auto-generated by Fern from our API Definition.

# isort: skip_file

import typing
from importlib import import_module

if typing.TYPE_CHECKING:
    from .attachment import Attachment
    from .audience_filter import AudienceFilter
    from .audience_recipient import AudienceRecipient
    from .base_message import BaseMessage
    from .base_message_send_to import BaseMessageSendTo
    from .base_social_presence import BaseSocialPresence
    from .brand_settings_email import BrandSettingsEmail
    from .brand_settings_in_app import BrandSettingsInApp
    from .brand_settings_social_presence import BrandSettingsSocialPresence
    from .brand_template import BrandTemplate
    from .brand_template_override import BrandTemplateOverride
    from .channel import Channel
    from .channel_metadata import ChannelMetadata
    from .channel_source import ChannelSource
    from .content import Content
    from .content_message import ContentMessage
    from .criteria import Criteria
    from .delay import Delay
    from .elemental_action_node import ElementalActionNode
    from .elemental_base_node import ElementalBaseNode
    from .elemental_channel_node import ElementalChannelNode
    from .elemental_content import ElementalContent
    from .elemental_content_sugar import ElementalContentSugar
    from .elemental_divider_node import ElementalDividerNode
    from .elemental_group_node import ElementalGroupNode
    from .elemental_image_node import ElementalImageNode
    from .elemental_meta_node import ElementalMetaNode
    from .elemental_node import (
        ElementalNode,
        ElementalNode_Action,
        ElementalNode_Channel,
        ElementalNode_Divider,
        ElementalNode_Group,
        ElementalNode_Image,
        ElementalNode_Meta,
        ElementalNode_Quote,
        ElementalNode_Text,
    )
    from .elemental_quote_node import ElementalQuoteNode
    from .elemental_text_node import ElementalTextNode
    from .email_footer import EmailFooter
    from .email_head import EmailHead
    from .email_header import EmailHeader
    from .expires_in_type import ExpiresInType
    from .expiry import Expiry
    from .i_action_button_style import IActionButtonStyle
    from .i_alignment import IAlignment
    from .i_preferences import IPreferences
    from .i_profile_preferences import IProfilePreferences
    from .icons import Icons
    from .in_app_placement import InAppPlacement
    from .invalid_list_pattern_recipient import InvalidListPatternRecipient
    from .invalid_list_recipient import InvalidListRecipient
    from .invalid_user_recipient import InvalidUserRecipient
    from .list_filter import ListFilter
    from .list_pattern_recipient import ListPatternRecipient
    from .list_pattern_recipient_type import ListPatternRecipientType
    from .list_recipient import ListRecipient
    from .list_recipient_type import ListRecipientType
    from .locale import Locale
    from .locales import Locales
    from .logo import Logo
    from .message import Message
    from .message_channels import MessageChannels
    from .message_context import MessageContext
    from .message_data import MessageData
    from .message_metadata import MessageMetadata
    from .message_preferences import MessagePreferences
    from .message_providers import MessageProviders
    from .message_providers_type import MessageProvidersType
    from .message_recipient import MessageRecipient
    from .metadata import Metadata
    from .ms_teams_recipient import MsTeamsRecipient
    from .pagerduty_recipient import PagerdutyRecipient
    from .preference import Preference
    from .preferences import Preferences
    from .recipient import Recipient
    from .recipient_data import RecipientData
    from .routing import Routing
    from .routing_method import RoutingMethod
    from .rule_type import RuleType
    from .slack_recipient import SlackRecipient
    from .template_message import TemplateMessage
    from .text_align import TextAlign
    from .text_style import TextStyle
    from .timeout import Timeout
    from .timeouts import Timeouts
    from .tracking_override import TrackingOverride
    from .user_recipient import UserRecipient
    from .user_recipient_type import UserRecipientType
    from .utm import Utm
    from .webhook_recipient import WebhookRecipient
    from .widget_background import WidgetBackground
_dynamic_imports: typing.Dict[str, str] = {
    "Attachment": ".attachment",
    "AudienceFilter": ".audience_filter",
    "AudienceRecipient": ".audience_recipient",
    "BaseMessage": ".base_message",
    "BaseMessageSendTo": ".base_message_send_to",
    "BaseSocialPresence": ".base_social_presence",
    "BrandSettingsEmail": ".brand_settings_email",
    "BrandSettingsInApp": ".brand_settings_in_app",
    "BrandSettingsSocialPresence": ".brand_settings_social_presence",
    "BrandTemplate": ".brand_template",
    "BrandTemplateOverride": ".brand_template_override",
    "Channel": ".channel",
    "ChannelMetadata": ".channel_metadata",
    "ChannelSource": ".channel_source",
    "Content": ".content",
    "ContentMessage": ".content_message",
    "Criteria": ".criteria",
    "Delay": ".delay",
    "ElementalActionNode": ".elemental_action_node",
    "ElementalBaseNode": ".elemental_base_node",
    "ElementalChannelNode": ".elemental_channel_node",
    "ElementalContent": ".elemental_content",
    "ElementalContentSugar": ".elemental_content_sugar",
    "ElementalDividerNode": ".elemental_divider_node",
    "ElementalGroupNode": ".elemental_group_node",
    "ElementalImageNode": ".elemental_image_node",
    "ElementalMetaNode": ".elemental_meta_node",
    "ElementalNode": ".elemental_node",
    "ElementalNode_Action": ".elemental_node",
    "ElementalNode_Channel": ".elemental_node",
    "ElementalNode_Divider": ".elemental_node",
    "ElementalNode_Group": ".elemental_node",
    "ElementalNode_Image": ".elemental_node",
    "ElementalNode_Meta": ".elemental_node",
    "ElementalNode_Quote": ".elemental_node",
    "ElementalNode_Text": ".elemental_node",
    "ElementalQuoteNode": ".elemental_quote_node",
    "ElementalTextNode": ".elemental_text_node",
    "EmailFooter": ".email_footer",
    "EmailHead": ".email_head",
    "EmailHeader": ".email_header",
    "ExpiresInType": ".expires_in_type",
    "Expiry": ".expiry",
    "IActionButtonStyle": ".i_action_button_style",
    "IAlignment": ".i_alignment",
    "IPreferences": ".i_preferences",
    "IProfilePreferences": ".i_profile_preferences",
    "Icons": ".icons",
    "InAppPlacement": ".in_app_placement",
    "InvalidListPatternRecipient": ".invalid_list_pattern_recipient",
    "InvalidListRecipient": ".invalid_list_recipient",
    "InvalidUserRecipient": ".invalid_user_recipient",
    "ListFilter": ".list_filter",
    "ListPatternRecipient": ".list_pattern_recipient",
    "ListPatternRecipientType": ".list_pattern_recipient_type",
    "ListRecipient": ".list_recipient",
    "ListRecipientType": ".list_recipient_type",
    "Locale": ".locale",
    "Locales": ".locales",
    "Logo": ".logo",
    "Message": ".message",
    "MessageChannels": ".message_channels",
    "MessageContext": ".message_context",
    "MessageData": ".message_data",
    "MessageMetadata": ".message_metadata",
    "MessagePreferences": ".message_preferences",
    "MessageProviders": ".message_providers",
    "MessageProvidersType": ".message_providers_type",
    "MessageRecipient": ".message_recipient",
    "Metadata": ".metadata",
    "MsTeamsRecipient": ".ms_teams_recipient",
    "PagerdutyRecipient": ".pagerduty_recipient",
    "Preference": ".preference",
    "Preferences": ".preferences",
    "Recipient": ".recipient",
    "RecipientData": ".recipient_data",
    "Routing": ".routing",
    "RoutingMethod": ".routing_method",
    "RuleType": ".rule_type",
    "SlackRecipient": ".slack_recipient",
    "TemplateMessage": ".template_message",
    "TextAlign": ".text_align",
    "TextStyle": ".text_style",
    "Timeout": ".timeout",
    "Timeouts": ".timeouts",
    "TrackingOverride": ".tracking_override",
    "UserRecipient": ".user_recipient",
    "UserRecipientType": ".user_recipient_type",
    "Utm": ".utm",
    "WebhookRecipient": ".webhook_recipient",
    "WidgetBackground": ".widget_background",
}


def __getattr__(attr_name: str) -> typing.Any:
    module_name = _dynamic_imports.get(attr_name)
    if module_name is None:
        raise AttributeError(f"No {attr_name} found in _dynamic_imports for module name -> {__name__}")
    try:
        module = import_module(module_name, __package__)
        if module_name == f".{attr_name}":
            return module
        else:
            return getattr(module, attr_name)
    except ImportError as e:
        raise ImportError(f"Failed to import {attr_name} from {module_name}: {e}") from e
    except AttributeError as e:
        raise AttributeError(f"Failed to get {attr_name} from {module_name}: {e}") from e


def __dir__():
    lazy_attrs = list(_dynamic_imports.keys())
    return sorted(lazy_attrs)


__all__ = [
    "Attachment",
    "AudienceFilter",
    "AudienceRecipient",
    "BaseMessage",
    "BaseMessageSendTo",
    "BaseSocialPresence",
    "BrandSettingsEmail",
    "BrandSettingsInApp",
    "BrandSettingsSocialPresence",
    "BrandTemplate",
    "BrandTemplateOverride",
    "Channel",
    "ChannelMetadata",
    "ChannelSource",
    "Content",
    "ContentMessage",
    "Criteria",
    "Delay",
    "ElementalActionNode",
    "ElementalBaseNode",
    "ElementalChannelNode",
    "ElementalContent",
    "ElementalContentSugar",
    "ElementalDividerNode",
    "ElementalGroupNode",
    "ElementalImageNode",
    "ElementalMetaNode",
    "ElementalNode",
    "ElementalNode_Action",
    "ElementalNode_Channel",
    "ElementalNode_Divider",
    "ElementalNode_Group",
    "ElementalNode_Image",
    "ElementalNode_Meta",
    "ElementalNode_Quote",
    "ElementalNode_Text",
    "ElementalQuoteNode",
    "ElementalTextNode",
    "EmailFooter",
    "EmailHead",
    "EmailHeader",
    "ExpiresInType",
    "Expiry",
    "IActionButtonStyle",
    "IAlignment",
    "IPreferences",
    "IProfilePreferences",
    "Icons",
    "InAppPlacement",
    "InvalidListPatternRecipient",
    "InvalidListRecipient",
    "InvalidUserRecipient",
    "ListFilter",
    "ListPatternRecipient",
    "ListPatternRecipientType",
    "ListRecipient",
    "ListRecipientType",
    "Locale",
    "Locales",
    "Logo",
    "Message",
    "MessageChannels",
    "MessageContext",
    "MessageData",
    "MessageMetadata",
    "MessagePreferences",
    "MessageProviders",
    "MessageProvidersType",
    "MessageRecipient",
    "Metadata",
    "MsTeamsRecipient",
    "PagerdutyRecipient",
    "Preference",
    "Preferences",
    "Recipient",
    "RecipientData",
    "Routing",
    "RoutingMethod",
    "RuleType",
    "SlackRecipient",
    "TemplateMessage",
    "TextAlign",
    "TextStyle",
    "Timeout",
    "Timeouts",
    "TrackingOverride",
    "UserRecipient",
    "UserRecipientType",
    "Utm",
    "WebhookRecipient",
    "WidgetBackground",
]
