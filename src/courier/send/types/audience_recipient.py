# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ...core.pydantic_utilities import IS_PYDANTIC_V2
from ...core.unchecked_base_model import UncheckedBaseModel
from .audience_filter import AudienceFilter
from .message_data import MessageData


class AudienceRecipient(UncheckedBaseModel):
    audience_id: str = pydantic.Field()
    """
    A unique identifier associated with an Audience. A message will be sent to each user in the audience.
    """

    data: typing.Optional[MessageData] = None
    filters: typing.Optional[typing.List[AudienceFilter]] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
