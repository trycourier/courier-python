# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ...brands.types.brand_colors import BrandColors
from ...core.pydantic_utilities import IS_PYDANTIC_V2
from ...core.serialization import FieldMetadata
from ...core.unchecked_base_model import UncheckedBaseModel
from .icons import Icons
from .in_app_placement import InAppPlacement
from .preferences import Preferences
from .widget_background import WidgetBackground


class BrandSettingsInApp(UncheckedBaseModel):
    border_radius: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="borderRadius")] = None
    disable_message_icon: typing_extensions.Annotated[
        typing.Optional[bool], FieldMetadata(alias="disableMessageIcon")
    ] = None
    font_family: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="fontFamily")] = None
    placement: typing.Optional[InAppPlacement] = None
    widget_background: typing_extensions.Annotated[WidgetBackground, FieldMetadata(alias="widgetBackground")]
    colors: BrandColors
    icons: Icons
    preferences: Preferences

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
