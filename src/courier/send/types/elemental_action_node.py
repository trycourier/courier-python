# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ...core.datetime_utils import serialize_datetime
from ...core.pydantic_utilities import pydantic_v1
from .elemental_base_node import ElementalBaseNode
from .i_action_button_style import IActionButtonStyle
from .i_alignment import IAlignment
from .locales import Locales


class ElementalActionNode(ElementalBaseNode):
    """
    Allows the user to execute an action. Can be a button or a link.
    """

    content: str = pydantic_v1.Field()
    """
    The text content of the action shown to the user.
    """

    href: str = pydantic_v1.Field()
    """
    The target URL of the action.
    """

    action_id: typing.Optional[str] = pydantic_v1.Field(default=None)
    """
    A unique id used to identify the action when it is executed.
    """

    align: typing.Optional[IAlignment] = pydantic_v1.Field(default=None)
    """
    The alignment of the action button. Defaults to "center".
    """

    background_color: typing.Optional[str] = pydantic_v1.Field(default=None)
    """
    The background color of the action button.
    """

    style: typing.Optional[IActionButtonStyle] = pydantic_v1.Field(default=None)
    """
    Defaults to `button`.
    """

    locales: Locales = pydantic_v1.Field()
    """
    Region specific content. See [locales docs](https://www.courier.com/docs/platform/content/elemental/locales/) for more details.
    """

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        allow_population_by_field_name = True
        populate_by_name = True
        extra = pydantic_v1.Extra.allow
        json_encoders = {dt.datetime: serialize_datetime}
