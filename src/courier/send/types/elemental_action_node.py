# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ...core.pydantic_utilities import IS_PYDANTIC_V2
from .elemental_base_node import ElementalBaseNode
from .i_action_button_style import IActionButtonStyle
from .i_alignment import IAlignment
from .locales import Locales


class ElementalActionNode(ElementalBaseNode):
    """
    Allows the user to execute an action. Can be a button or a link.
    """

    content: str = pydantic.Field()
    """
    The text content of the action shown to the user.
    """

    href: str = pydantic.Field()
    """
    The target URL of the action.
    """

    action_id: typing.Optional[str] = pydantic.Field(default=None)
    """
    A unique id used to identify the action when it is executed.
    """

    align: typing.Optional[IAlignment] = pydantic.Field(default=None)
    """
    The alignment of the action button. Defaults to "center".
    """

    background_color: typing.Optional[str] = pydantic.Field(default=None)
    """
    The background color of the action button.
    """

    style: typing.Optional[IActionButtonStyle] = pydantic.Field(default=None)
    """
    Defaults to `button`.
    """

    locales: Locales = pydantic.Field()
    """
    Region specific content. See [locales docs](https://www.courier.com/docs/platform/content/elemental/locales/) for more details.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
