# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations

import typing

import pydantic
from ...core.pydantic_utilities import IS_PYDANTIC_V2, update_forward_refs
from .elemental_base_node import ElementalBaseNode


class ElementalChannelNode(ElementalBaseNode):
    """
    The channel element allows a notification to be customized based on which channel it is sent through.
    For example, you may want to display a detailed message when the notification is sent through email,
    and a more concise message in a push notification. Channel elements are only valid as top-level
    elements; you cannot nest channel elements. If there is a channel element specified at the top-level
    of the document, all sibling elements must be channel elements.
    Note: As an alternative, most elements support a `channel` property. Which allows you to selectively
    display an individual element on a per channel basis. See the
    [control flow docs](https://www.courier.com/docs/platform/content/elemental/control-flow/) for more details.
    """

    channel: str = pydantic.Field()
    """
    The channel the contents of this element should be applied to. Can be `email`,
    `push`, `direct_message`, `sms` or a provider such as slack
    """

    elements: typing.Optional[typing.List["ElementalNode"]] = pydantic.Field(default=None)
    """
    An array of elements to apply to the channel. If `raw` has not been 
    specified, `elements` is `required`.
    """

    raw: typing.Optional[typing.Dict[str, typing.Optional[typing.Any]]] = pydantic.Field(default=None)
    """
    Raw data to apply to the channel. If `elements` has not been
    specified, `raw` is `required`.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow


from .elemental_group_node import ElementalGroupNode  # noqa: E402, F401, I001
from .elemental_node import ElementalNode  # noqa: E402, F401, I001

update_forward_refs(ElementalChannelNode)
