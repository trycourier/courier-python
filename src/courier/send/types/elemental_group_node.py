# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations

import typing

import pydantic
from ...core.pydantic_utilities import IS_PYDANTIC_V2, update_forward_refs
from .elemental_base_node import ElementalBaseNode


class ElementalGroupNode(ElementalBaseNode):
    """
    Allows you to group elements together. This can be useful when used in combination with "if" or "loop". See [control flow docs](https://www.courier.com/docs/platform/content/elemental/control-flow/) for more details.
    """

    elements: typing.List["ElementalNode"] = pydantic.Field()
    """
    Sub elements to render.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow


from .elemental_channel_node import ElementalChannelNode  # noqa: E402, F401, I001
from .elemental_node import ElementalNode  # noqa: E402, F401, I001

update_forward_refs(ElementalGroupNode)
