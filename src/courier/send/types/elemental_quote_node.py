# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ...core.pydantic_utilities import IS_PYDANTIC_V2
from ...core.serialization import FieldMetadata
from .elemental_base_node import ElementalBaseNode
from .i_alignment import IAlignment
from .locales import Locales
from .text_style import TextStyle


class ElementalQuoteNode(ElementalBaseNode):
    """
    Renders a quote block.
    """

    content: str = pydantic.Field()
    """
    The text value of the quote.
    """

    align: typing.Optional[IAlignment] = pydantic.Field(default=None)
    """
    Alignment of the quote.
    """

    border_color: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="borderColor")] = (
        pydantic.Field(default=None)
    )
    """
    CSS border color property. For example, `#fff`
    """

    text_style: TextStyle
    locales: Locales = pydantic.Field()
    """
    Region specific content. See [locales docs](https://www.courier.com/docs/platform/content/elemental/locales/) for more details.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
