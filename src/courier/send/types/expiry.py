# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ...core.pydantic_utilities import IS_PYDANTIC_V2
from ...core.unchecked_base_model import UncheckedBaseModel
from .expires_in_type import ExpiresInType


class Expiry(UncheckedBaseModel):
    expires_at: typing.Optional[str] = pydantic.Field(default=None)
    """
    An epoch timestamp or ISO8601 timestamp with timezone `(YYYY-MM-DDThh:mm:ss.sTZD)` that describes the time in which a message expires.
    """

    expires_in: ExpiresInType = pydantic.Field()
    """
    A duration in the form of milliseconds or an ISO8601 Duration format (i.e. P1DT4H).
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
