# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ...core.pydantic_utilities import IS_PYDANTIC_V2
from ...core.unchecked_base_model import UncheckedBaseModel
from .utm import Utm


class MessageMetadata(UncheckedBaseModel):
    event: typing.Optional[str] = pydantic.Field(default=None)
    """
    An arbitrary string to tracks the event that generated this request (e.g. 'signup').
    """

    tags: typing.Optional[typing.List[str]] = pydantic.Field(default=None)
    """
    An array of up to 9 tags you wish to associate with this request (and corresponding messages) for later analysis. Individual tags cannot be more than 30 characters in length.
    """

    utm: typing.Optional[Utm] = pydantic.Field(default=None)
    """
    Identify the campaign that refers traffic to a specific website, and attributes the browser's website session.
    """

    trace_id: typing.Optional[str] = pydantic.Field(default=None)
    """
    A unique ID used to correlate this request to processing on your servers. Note: Courier does not verify the uniqueness of this ID.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
