# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ...commons.types.channel_preference import ChannelPreference
from ...commons.types.preference_status import PreferenceStatus
from ...commons.types.rule import Rule
from ...core.pydantic_utilities import IS_PYDANTIC_V2
from ...core.unchecked_base_model import UncheckedBaseModel
from .channel_source import ChannelSource


class Preference(UncheckedBaseModel):
    status: PreferenceStatus
    rules: typing.Optional[typing.List[Rule]] = None
    channel_preferences: typing.Optional[typing.List[ChannelPreference]] = None
    source: typing.Optional[ChannelSource] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
