# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ...core.pydantic_utilities import IS_PYDANTIC_V2
from ...core.unchecked_base_model import UncheckedBaseModel
from .routing_strategy import RoutingStrategy
from .tag import Tag


class NotificationTemplates(UncheckedBaseModel):
    created_at: int = pydantic.Field()
    """
    A UTC timestamp at which notification was created. This is stored as a millisecond representation of the Unix epoch (the time passed since January 1, 1970).
    """

    id: str = pydantic.Field()
    """
    A unique identifier associated with the notification.
    """

    routing: RoutingStrategy = pydantic.Field()
    """
    Routing strategy used by this notification.
    """

    tags: typing.List[Tag] = pydantic.Field()
    """
    A list of tags attached to the notification.
    """

    title: str = pydantic.Field()
    """
    The title of the notification.
    """

    updated_at: int = pydantic.Field()
    """
    A UTC timestamp at which notification was updated. This is stored as a millisecond representation of the Unix epoch (the time passed since January 1, 1970).
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
