# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ...core.pydantic_utilities import IS_PYDANTIC_V2
from ...core.unchecked_base_model import UncheckedBaseModel
from .channel_identifier import ChannelIdentifier
from .routing_strategy_method import RoutingStrategyMethod


class RoutingStrategy(UncheckedBaseModel):
    method: RoutingStrategyMethod = pydantic.Field()
    """
    The method for selecting channels to send the message with. Value can be either 'single' or 'all'. If not provided will default to 'single'
    """

    channels: typing.List[ChannelIdentifier] = pydantic.Field()
    """
    An array of valid channel identifiers (like email, push, sms, etc.) and additional routing nodes.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
