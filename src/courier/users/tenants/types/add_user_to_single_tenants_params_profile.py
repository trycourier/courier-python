# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ....core.datetime_utils import serialize_datetime
from ....core.pydantic_utilities import pydantic_v1


class AddUserToSingleTenantsParamsProfile(pydantic_v1.BaseModel):
    """
    AddUserToSingleTenantsParamsProfile is no longer used for Add a User to a Single Tenant
    """

    title: str
    email: str = pydantic_v1.Field()
    """
    Email Address
    """

    phone_number: str = pydantic_v1.Field()
    """
    A valid phone number
    """

    locale: str = pydantic_v1.Field()
    """
    The user's preferred ISO 639-1 language code.
    """

    additional_fields: typing.Dict[str, typing.Any] = pydantic_v1.Field()
    """
    Additional provider specific fields may be specified.
    """

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        extra = pydantic_v1.Extra.allow
        json_encoders = {dt.datetime: serialize_datetime}
