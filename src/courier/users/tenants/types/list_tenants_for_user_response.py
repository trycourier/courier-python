# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ....commons.types.user_tenant_association import UserTenantAssociation
from ....core.pydantic_utilities import IS_PYDANTIC_V2
from ....core.unchecked_base_model import UncheckedBaseModel


class ListTenantsForUserResponse(UncheckedBaseModel):
    items: typing.Optional[typing.List[UserTenantAssociation]] = None
    has_more: bool = pydantic.Field()
    """
    Set to true when there are more pages that can be retrieved.
    """

    url: str = pydantic.Field()
    """
    A url that may be used to generate these results.
    """

    next_url: typing.Optional[str] = pydantic.Field(default=None)
    """
    A url that may be used to generate fetch the next set of results. 
    Defined only when `has_more` is set to true
    """

    cursor: typing.Optional[str] = pydantic.Field(default=None)
    """
    A pointer to the next page of results. Defined 
    only when `has_more` is set to true
    """

    type: typing.Literal["list"] = pydantic.Field(default="list")
    """
    Always set to `list`. Represents the type of this object.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
